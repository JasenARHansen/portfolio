#ifndef HACKERRANK_PREPARE_DATA_STRUCTURES_STACKS_GAME_OF_TWO_STACKS_TEST
#define HACKERRANK_PREPARE_DATA_STRUCTURES_STACKS_GAME_OF_TWO_STACKS_TEST

#include "gtest/gtest.h"
#include "../../../../../code/hackerrank/prepare/dataStructures/stack/GameOfTwoStacks.cpp"  // NOLINT : Ignore .cpp import
TEST(GameOfTwoStacksTest, description) {
    testing::internal::CaptureStdout();
    GameOfTwoStacks::description();
    EXPECT_NE("", testing::internal::GetCapturedStdout());
}

TEST(GameOfTwoStacksTest, twoStacks_1) {
    int expected = 4;
    auto maxSum = 12;
    vector<int> a{1, 2, 3, 4, 5};
    vector<int> b{6, 7, 8, 9};
    auto result = GameOfTwoStacks::twoStacks(maxSum, a, b);
    EXPECT_EQ(expected, result);
}

TEST(GameOfTwoStacksTest, twoStacks_2) {
    int expected = 4;
    auto maxSum = 12;
    vector<int> a{4, 2, 4, 6, 1};
    vector<int> b{2, 1, 8, 5};
    auto result = GameOfTwoStacks::twoStacks(maxSum, a, b);
    EXPECT_EQ(expected, result);
}

TEST(GameOfTwoStacksTest, twoStacks_3) {
    int expected = 0;
    auto maxSum = 12;
    vector<int> a{};
    vector<int> b{};
    auto result = GameOfTwoStacks::twoStacks(maxSum, a, b);
    EXPECT_EQ(expected, result);
}

TEST(GameOfTwoStacksTest, twoStacks_4) {
    int expected = 3;
    auto maxSum = 12;
    vector<int> a{2, 1, 8, 5};
    vector<int> b{};
    auto result = GameOfTwoStacks::twoStacks(maxSum, a, b);
    EXPECT_EQ(expected, result);
}

TEST(GameOfTwoStacksTest, twoStacks_5) {
    int expected = 3;
    auto maxSum = 12;
    vector<int> a{};
    vector<int> b{2, 1, 8, 5};
    auto result = GameOfTwoStacks::twoStacks(maxSum, a, b);
    EXPECT_EQ(expected, result);
}

TEST(GameOfTwoStacksTest, twoStacks_6) {
    int expected = 6;
    auto maxSum = 12;
    vector<int> a{1, 2, 3};
    vector<int> b{1, 2, 3};
    auto result = GameOfTwoStacks::twoStacks(maxSum, a, b);
    EXPECT_EQ(expected, result);
}

TEST(GameOfTwoStacksTest, twoStacks_7) {
    int expected = 5;
    auto maxSum = 12;
    vector<int> a{1, 2};
    vector<int> b{1, 2, 3};
    auto result = GameOfTwoStacks::twoStacks(maxSum, a, b);
    EXPECT_EQ(expected, result);
}

TEST(GameOfTwoStacksTest, twoStacks_8) {
    int expected = 5;
    auto maxSum = 12;
    vector<int> a{1, 2, 3};
    vector<int> b{1, 2};
    auto result = GameOfTwoStacks::twoStacks(maxSum, a, b);
    EXPECT_EQ(expected, result);
}

TEST(GameOfTwoStacksTest, twoStacks_9) {
    int expected = 4;
    auto maxSum = 12;
    vector<int> a{1, 2};
    vector<int> b{1, 2};
    auto result = GameOfTwoStacks::twoStacks(maxSum, a, b);
    EXPECT_EQ(expected, result);
}

TEST(GameOfTwoStacksTest, twoStacks_10) {
    vector<int> expected = {4, 6, 1, 6, 1, 6, 6, 8, 7, 8};
    vector<int> maxSum = {12, 62, 5, 55, 13, 67, 64, 73,58,92};
    vector<vector<int>> a{{1, 2},
                          {7, 15, 12, 0, 5,  18, 17, 2,  10, 15, 4,  2,  9, 15, 13, 12, 16},
                          {4, 11, 16, 0, 18, 17, 9,  13, 7,  12, 16, 19, 2, 15, 5,  13, 1, 10, 0, 8, 0, 6, 16, 12, 15, 7, 1, 6, 19, 16, 2},
                          {11, 6, 1, 13, 14, 7, 8, 10, 3, 17, 7, 18, 6, 4, 5, 13, 17, 4, 16, 9, 17, 16, 12, 6, 7},
                          {13, 9, 16, 18, 2, 5, 15, 10, 14, 4, 7, 18, 2, 6, 8, 17, 0, 5, 7, 7, 6, 3, 8, 11, 6, 8, 5, 19, 11, 8, 3, 5, 17, 19, 15, 12, 16, 10, 2, 2, 6, 9, 0, 8},
                          {19, 9, 8, 13, 1, 7, 18, 0, 19, 19, 10, 5, 15, 19, 0, 0, 16, 12, 5, 10},
                          {15, 5, 18, 19, 19, 2, 4, 17, 7, 16, 14, 5, 19, 2, 5, 7, 5, 12, 15, 1, 7, 8, 2, 12, 12, 4, 19, 18, 1, 11, 2, 16, 16, 0, 7, 7, 15},
                          {16, 17, 9, 3, 12, 19},
                          {16, 8, 2, 11, 2, 7, 11, 6, 4, 19, 12, 2, 2, 11, 0, 14, 12, 3, 6, 12, 9},
                          {14, 10, 11, 8, 14, 14, 15, 7, 16, 6, 8, 7, 4}};
    vector<vector<int>> b{{1,  2},
                          {12, 16, 6,  8,  16, 15, 18, 3,  11, 0, 17, 7, 6, 11, 14, 13, 15, 6,  18, 6, 16, 12, 16, 11, 16, 11},
                          {15, 8,  11, 16, 6,  0,  5,  11, 7,  9, 8,  6, 3, 3,  4,  8,  17, 14, 9,  5, 15, 15, 1,  19, 10, 0, 12, 8, 11, 9, 11, 18, 17, 14},
                          {10, 15, 13, 17, 10, 7, 0, 16, 8, 13, 11, 8, 14, 13},
                          {16, 9, 17, 16, 6, 4, 15, 12, 0, 3, 16, 6, 11, 1, 18, 15, 10, 13, 12, 19, 5, 7, 11, 1, 10, 14, 4, 16, 3, 4, 17, 11, 5, 14, 19, 12, 19, 15, 4, 11, 10, 12},
                          {11, 17, 1, 18, 14, 12, 9, 18, 14, 3, 4, 13, 4, 12, 6, 5, 12, 16, 5, 11, 16, 8, 16, 3, 7, 8, 3, 3, 0, 1, 13, 4, 10, 7, 14},
                          {3, 5, 14, 19, 19, 19, 18, 1, 16, 17, 6, 0, 13, 19, 7, 1, 1, 12, 5, 6, 11, 3, 19, 14, 5, 7, 3, 18, 14, 10, 13, 10, 15, 19, 9, 14, 11, 0, 7, 7, 17, 6, 8, 10, 5, 7, 3, 7, 19, 8},
                          {9, 3, 4, 19, 18, 4, 1, 5, 15, 1, 12, 2, 18, 18, 2, 1, 4, 10, 4, 3, 1, 13, 0, 4, 17, 16, 14, 6, 11, 6, 6, 0, 9, 10, 12, 0, 14, 13, 5, 1, 14, 9, 4, 4},
                          {19, 9, 11, 5, 11, 7, 2, 11, 5, 19, 7, 14, 13, 18, 8, 12, 1, 14, 8},
                          {19, 14, 6, 2, 19, 17, 9, 5, 11, 19}};
    for (auto index = 0; index < (int)expected.size(); index++) {
        auto result = GameOfTwoStacks::twoStacks(maxSum.at(index), a.at(index), b.at(index));
        EXPECT_EQ(expected.at(index), result);
    }
}

TEST(GameOfTwoStacksTest, twoStacks_11) {
    vector<int> expected = {8, 2, 8, 13, 1, 5, 10, 4};
    vector<int> maxSum = {87, 16, 67, 65, 11, 46, 75, 29};
    vector<vector<int>> a{{10, 12, 15, 3, 19, 12, 13, 12, 15, 1, 18, 18},
                          {7, 8, 16, 6, 6, 18, 17, 14, 6, 4, 18, 9, 14, 0, 5, 18, 13, 5, 13, 9, 1, 10, 9, 3, 8, 1, 12, 10, 16, 5, 17, 16, 5, 13},
                          {10, 3, 15, 18, 9},
                          {7, 0, 3, 5, 2, 6, 1, 1, 7, 10, 13, 0, 15, 5, 4, 14, 4, 4, 5, 4, 14, 17, 16, 7, 8, 1, 12, 18, 13, 10, 14, 1, 10, 17, 6, 5, 16, 19, 18, 3, 1, 11, 16},
                          {5, 18, 18, 19, 3, 8, 12, 13, 14, 5, 16, 12, 4, 1, 0, 3, 19, 15, 17, 2},
                          {16, 1, 17, 2, 15, 15, 18, 19, 11, 19, 19, 14, 10, 15, 3, 12, 18, 9, 15, 14, 9, 3, 6, 10},
                          {2, 2, 3, 3, 12, 5, 11, 19, 15, 10, 10, 14},
                          {16, 0, 16, 5, 0, 16, 12, 1, 12, 14, 19, 15, 13, 0, 10, 14, 15, 14, 13, 12, 12, 15, 4, 15, 14, 8, 16, 16, 14, 0, 16, 2, 0, 12, 7}};
    vector<vector<int>> b{{2, 19, 16, 16, 7, 12, 10, 9, 2, 16, 12, 1, 0, 3, 3, 3, 16, 8, 2, 6, 12, 17, 2},
                          {2, 12, 4, 19, 18, 2, 15, 17, 3, 1, 9, 9, 19, 3, 6, 13, 12, 19, 15, 1, 14, 15},
                          {9, 0, 13, 5, 11, 11, 7, 7, 8, 11, 8, 18, 12, 0, 13, 18, 5, 5, 10},
                          {8, 8, 12, 3, 4, 16, 0},
                          {11, 5, 11, 3, 8, 7, 12, 1, 8, 3, 11, 14},
                          {11, 1},
                          {10, 16, 16, 17, 0, 0, 15, 9, 16, 1, 18, 11, 19, 9, 14, 0, 2, 4, 7, 17, 6, 2, 12, 10, 7, 3, 1, 2},
                          {0, 0, 19, 13, 5, 13, 4, 0, 7, 5, 2, 13, 12, 8, 6, 4, 13, 13, 0, 8, 7, 0, 16, 15, 14, 8, 11, 16, 8, 15, 3, 0}};
    for (auto index = 0; index < maxSum.size(); index++) {
        auto result = GameOfTwoStacks::twoStacks(maxSum.at(index), a.at(index), b.at(index));
        EXPECT_EQ(expected.at(index), result);
    }
}

TEST(GameOfTwoStacksTest, twoStacks_12) {
    vector<int> expected = {10, 7, 4, 5, 8, 6, 10, 4, 9, 7};
    vector<int> maxSum = {94, 71, 25, 31, 90, 55, 75, 39, 76, 58};
    vector<vector<int>> a{{0, 8, 18, 13, 7, 15},
                          {14, 8, 17, 1, 16, 10, 0, 12, 0, 15, 13, 4, 11, 2, 14, 7, 11, 0, 9, 17, 8, 0, 16, 4, 7, 15, 7, 8, 11, 10, 18, 6, 19, 16, 7},
                          {2, 6, 18, 17, 5, 9, 9, 7, 19, 17, 19, 7, 13, 6, 2, 0, 7, 5, 11, 5, 11, 2, 13, 11, 1, 11, 11, 12, 10, 18, 16, 4, 5, 14, 1, 2, 15, 10, 9},
                          {4, 11, 9},
                          {17, 0, 15, 16, 7, 0, 19, 10, 17, 6, 8, 1, 19, 15, 13, 13, 17, 7, 8, 11, 12, 4, 6, 7, 17, 16, 0, 12, 10, 1, 1, 7, 13},
                          {3, 18, 0, 11, 19, 19, 18, 12, 5, 15, 11, 5, 19, 3, 1, 5, 11, 10, 14, 11, 2, 4, 4, 15, 12, 18, 4, 7, 11, 5, 14, 14, 4, 6},
                          {11, 16, 2, 18, 19, 5, 18, 8, 0, 11, 15, 10, 14, 16, 3, 11, 14, 1, 12, 15, 8, 1, 16, 19, 3, 11, 15, 14, 5, 9, 8, 8, 5, 10},
                          {6, 15, 9, 14, 11, 8, 4, 10, 10, 18, 4, 18, 13, 5, 18, 6, 1, 13},
                          {11, 4, 0, 15, 12, 4, 13, 18, 19, 14, 4, 2, 14, 9, 12, 5, 19, 8, 15, 5, 6, 13, 11, 7, 18, 6, 19, 7},
                          {9, 15, 19, 19, 6, 6, 8, 7, 7, 14, 3, 15, 0}};
    vector<vector<int>> b{{7, 0, 19, 16, 18, 3, 9, 11, 15, 9, 10, 16, 17, 5, 2, 6, 8, 19, 6, 3, 14, 19, 11, 9},
                          {7, 18, 0, 19},
                          {14, 0, 9, 1, 13, 7, 15, 14, 6, 1, 17, 12, 4, 11, 17, 7},
                          {0, 15, 6, 6, 9, 8, 1, 11, 10, 8, 3, 11, 9, 9, 18, 17, 3, 5, 10, 12, 9, 14, 15, 6, 14, 7, 7, 4, 3, 10, 5, 15, 6, 11, 1, 7, 12, 14, 10, 2, 2, 14, 13, 4, 3, 3, 13, 18, 0, 3},
                          {17, 3},
                          {17, 3, 18, 15, 8, 15, 10, 11, 0, 9, 15, 1, 7, 18, 11, 1, 1, 5, 5, 17, 0, 9, 7, 17, 9, 18, 2, 15, 4, 18},
                          {7, 4, 15, 17, 5, 8, 1, 0, 10, 7, 9, 14, 19, 15, 7, 3, 10, 7, 4, 7, 18, 19, 10, 14, 13, 7, 3, 1, 8, 0, 3, 15, 17, 19, 4, 2, 19, 5, 2, 1, 13, 3},
                          {3, 12, 9},
                          {3, 2, 14, 14, 6, 14, 9, 18, 10, 15, 9, 1, 1, 13, 3, 16, 14, 16, 13, 6, 16, 0, 11, 2, 5, 14, 9, 15, 0, 0, 14, 3},
                          {11, 8, 6, 7, 0, 17, 10, 5, 11, 11}};
    for (auto index = 0; index < maxSum.size(); index++) {
        auto result = GameOfTwoStacks::twoStacks(maxSum.at(index), a.at(index), b.at(index));
        EXPECT_EQ(expected.at(index), result);
    }
}

TEST(GameOfTwoStacksTest, twoStacks_13) {
    vector<int> expected = {2, 13, 5, 11, 3, 3, 6, 5, 7, 5};
    vector<int> maxSum = {13, 79, 32, 88, 16, 32, 60, 33, 75, 31};
    vector<vector<int>> a{{7, 6, 14, 8, 16, 15, 3, 7, 15, 1, 13, 15, 1, 0, 9, 4, 16, 10, 15, 16, 8, 2, 9, 6, 4, 14, 9, 8, 19, 5, 0, 6, 11},
                          {6, 10, 6, 8, 8, 1, 2, 4, 9, 16, 7, 10, 2, 8, 6, 14, 15, 2, 9, 11, 17, 16, 19, 3, 8, 2, 5, 6, 14, 7, 16, 12},
                          {2, 8, 16, 4, 1, 3, 1, 5, 16, 4, 5, 4, 16, 4, 9, 4, 6, 17, 13, 18, 2, 9, 9, 6, 13, 12, 12, 8, 7, 15, 11, 9, 15, 19, 6, 16},
                          {19, 15, 16, 15, 1, 6, 1, 11, 0, 2, 0, 19, 15, 12, 11, 15, 12, 18, 6, 1, 13, 5, 19, 2},
                          {5, 10, 1, 4, 17, 8, 3, 7, 12},
                          {8, 19, 2, 15, 11, 11, 2, 1, 12, 8, 19, 0, 2, 8, 10, 9, 13, 0, 11, 18, 14, 18, 18, 11, 16, 6, 17, 8, 4, 4, 11, 13, 15, 14, 0, 19, 17, 14, 0, 10, 14, 11, 2, 17, 11, 4, 6},
                          {7, 14, 1, 2, 18, 16, 19, 9, 12, 17, 6, 9, 19, 13, 19, 19, 19, 5, 16, 2, 9, 4, 10, 17, 12, 3, 12, 6, 16, 7, 18, 16, 1, 11},
                          {6, 7, 1, 6, 13, 12, 5, 12, 18, 13},
                          {15, 12, 14, 4, 5, 6, 10, 13, 7, 8, 18, 11, 6, 10, 1, 11, 16, 0, 1, 5, 16, 16, 6, 9, 9, 15, 16, 12, 12, 9, 6, 7, 2, 0, 11, 7, 18, 13, 12, 5, 14, 10, 9, 0, 12, 10},
                          {19, 19, 1, 19, 4, 14, 7, 19, 13, 0, 12, 6, 3, 2, 11, 10, 15, 8, 7, 10, 13, 2, 13, 0, 17, 9, 0, 16, 1, 15, 7}};
    vector<vector<int>> b{{6, 14, 19, 2, 9, 18, 9, 11, 11, 4, 4, 4, 6, 8, 0, 8, 15, 8, 16, 9, 17, 14, 14, 4, 16, 2, 3, 1, 14, 9, 4, 0, 15, 16, 14, 4, 14, 15, 7, 6, 0, 11, 10, 18},
                          {9, 3, 0, 9, 16, 14, 13, 5, 2, 12, 15, 16, 12, 13, 11, 7, 16, 12, 19, 13, 8, 10, 8, 17, 12, 5, 15, 18, 12, 12, 3, 13, 15},
                          {14, 19, 14, 2},
                          {11, 18, 16, 13, 13, 15, 12, 12, 2, 9, 0, 3, 7, 13, 14, 7, 15, 7, 6, 10, 11, 9, 5, 3, 7, 3, 17, 1, 0, 16, 3, 11, 7, 11, 4, 0, 18, 17, 5, 0},
                          {12, 4, 15, 12, 7, 4, 13, 19, 13, 8, 10, 0, 11, 6, 12, 9, 15, 9, 1, 5, 6, 16, 2, 8, 9, 7, 5, 10, 2, 12, 2, 14, 8, 17, 6, 7, 14, 11},
                          {17, 16, 10, 15, 10, 0, 5, 14, 16, 11, 11, 16, 8, 8, 8, 1, 3, 2},
                          {18, 11, 19},
                          {14, 19, 10, 17, 16, 14, 0, 0, 13, 9, 7, 11},
                          {11, 9, 11, 5, 14, 19, 13, 12, 8, 2, 19, 17, 6, 11, 6, 12, 10, 8, 5, 13, 8, 3, 7, 0, 1, 13, 3, 10, 13, 15, 0, 16, 16, 3, 13, 3, 3, 6, 15, 3, 8, 7},
                          {0, 6, 8, 0, 2}};
    for (auto index = 0; index < maxSum.size(); index++) {
        auto result = GameOfTwoStacks::twoStacks(maxSum.at(index), a.at(index), b.at(index));
        EXPECT_EQ(expected.at(index), result);
    }
}

TEST(GameOfTwoStacksTest, twoStacks_14) {
    vector<int> expected = {3, 7, 14, 14, 8, 0, 8, 5, 2, 11, 9};
    vector<int> maxSum = {34, 37, 100, 94, 70, 7, 81, 19, 26, 77, 60};
    vector<vector<int>> a{{8, 19, 6, 6, 14, 8, 18, 5, 15, 18, 4, 6, 11, 6, 11, 11, 15, 0, 12, 12, 14, 19, 11, 14, 17, 19, 6, 19, 5, 6, 12, 5, 5, 10, 12, 12, 19, 2, 17, 6, 0, 13, 12, 3, 11},
                          {9, 0, 2, 1, 13, 7, 5, 4, 15, 12, 2, 3, 3, 5, 6, 5, 6, 15, 4, 11, 10, 6, 9, 12, 0, 4, 11, 5, 4, 2, 13, 13, 2, 16, 7, 7, 15, 12},
                          {3, 8, 12, 9, 17, 16, 13, 11, 2, 3, 2, 2, 8, 8, 1, 1, 18, 15},
                          {11, 16, 9, 15},
                          {9, 6, 2, 5, 7, 9, 16, 6, 12, 2, 13, 14, 3, 3, 3, 3, 10, 8, 11, 14, 5, 15, 10, 16},
                          {11, 17, 12, 14, 12, 7, 17, 3, 8, 1, 9, 13, 16, 19, 1, 7, 17, 7, 8, 11, 0, 19, 14, 18, 3, 14, 4, 17, 2, 8, 15, 13, 17, 0, 8, 10, 19},
                          {16, 11, 7, 18, 12, 6, 12, 5, 4, 3, 17, 5, 9, 13, 16, 17, 17, 15, 18, 11, 5, 12, 3, 3, 11, 12, 1, 12, 15, 11, 13, 11},
                          {14, 0, 15, 12, 15, 6, 15, 0, 18, 19, 16, 1, 3, 9, 5, 19, 0, 10, 10, 2, 14, 12, 1, 4, 6, 6, 10, 16, 7, 2, 14, 2},
                          {13, 1, 19, 3},
                          {11, 4, 1, 11, 10, 6, 5, 1, 1, 19, 9, 7, 1, 16, 14, 2, 14, 19, 0, 4, 10, 1, 1, 11, 2, 11, 5, 7, 0, 13},
                          {17, 5, 0}};
    vector<vector<int>> b{{16, 7, 6, 8, 11, 10, 2, 10, 1, 17, 19, 12, 3, 10, 18, 1, 14, 15, 19, 5},
                          {3, 10, 4, 17, 5, 7, 2, 11, 4, 9, 18, 8, 0, 9, 6, 1, 1, 6, 17, 12, 4, 13, 6, 17, 19, 0, 5, 6, 7, 0, 18, 2, 2, 14, 19, 0, 13, 2, 11, 17, 3, 10},
                          {15, 12, 6, 15, 5, 0, 7, 2, 3, 9, 11, 10, 0, 14, 10, 4, 15, 8, 0, 9, 11, 14, 4, 5, 8, 12},
                          {2, 4, 0, 3, 3, 14, 18, 4, 5, 1, 16, 11, 11, 0, 6, 11, 12, 7, 14, 6, 11, 19, 14, 4, 12, 15, 9, 15, 11, 18, 10, 14, 15, 2, 9, 10, 16, 7, 15, 13, 8, 3, 4, 12, 4, 11, 3, 16, 18, 18},
                          {19, 18, 6, 9, 13, 0, 18, 3, 18, 12, 8, 6, 14},
                          {17, 13, 7, 10, 14, 0, 19, 13, 1, 6, 2, 1, 7, 13, 1, 6, 19, 19, 1, 5, 16, 11, 8, 4, 6, 1, 2, 18, 1, 12, 18, 19, 17, 17, 9},
                          {2, 12, 10, 7, 10, 14, 12, 14, 17},
                          {2, 2, 6, 9, 0, 1, 1, 18, 12, 17, 11, 16, 18, 8, 7, 18, 19, 17, 13, 13, 2, 14, 10, 8, 0, 0, 4, 0, 2, 11, 2, 16},
                          {14, 8, 6, 2, 7, 14, 9, 5, 5, 18, 10, 11, 0, 17, 1, 9, 17, 1, 5},
                          {16, 4, 17, 9, 15, 19, 16, 0, 0, 9, 11, 10, 17, 4, 18, 3, 6},
                          {10, 8, 2, 1, 13, 1, 14, 18, 9, 18, 16, 19, 5}};
    for (auto index = 0; index < maxSum.size(); index++) {
        auto result = GameOfTwoStacks::twoStacks(maxSum.at(index), a.at(index), b.at(index));
        EXPECT_EQ(expected.at(index), result);
    }
}

TEST(GameOfTwoStacksTest, twoStacks_15) {
    vector<int> expected = {32, 13, 11, 34, 36, 26, 50, 22, 23, 28};
    vector<int> maxSum = {12, 5, 5, 13, 17, 14, 23, 8, 42, 31};
    vector<vector<int>> a{{1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0},
                          {0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0},
                          {1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1},
                          {1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0},
                          {1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0},
                          {1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1},
                          {0, 1, 1, 1, 0, 1},
                          {0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1},
                          {0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0},
                          {0, 0, 0, 1}};
    vector<vector<int>> b{{0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1},
                          {1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0},
                          {0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1},
                          {0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0},
                          {1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0},
                          {1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0},
                          {1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0},
                          {1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0},
                          {1, 0, 0, 0, 1, 1, 1, 1, 1, 1},
                          {1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0}};
    for (auto index = 0; index < (int)expected.size(); index++) {
        auto result = GameOfTwoStacks::twoStacks(maxSum.at(index), a.at(index), b.at(index));
        EXPECT_EQ(expected.at(index), result);
    }
}

TEST(GameOfTwoStacksTest, twoStacks_16) {
    vector<int> expected = {62, 35, 39, 24, 38, 22, 26, 40, 67, 30};
    vector<int> maxSum = {41, 37, 16, 17, 15, 11, 46, 25, 29, 44};
    vector<vector<int>> a{{0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0},
                          {0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0},
                          {1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1},
                          {0, 1, 1, 0, 1},
                          {1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0},
                          {1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0},
                          {0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0},
                          {0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0},
                          {0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
                          {0, 0, 0, 1, 1, 1}};
    vector<vector<int>> b{{0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1},
                          {0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0},
                          {0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1},
                          {1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0},
                          {0, 0, 0, 1, 0, 0, 0},
                          {1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0},
                          {1, 1},
                          {0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0},
                          {0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0},
                          {1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1}};
    for (auto index = 0; index < (int)expected.size(); index++) {
        auto result = GameOfTwoStacks::twoStacks(maxSum.at(index), a.at(index), b.at(index));
        EXPECT_EQ(expected.at(index), result);
    }
}

TEST(GameOfTwoStacksTest, twoStacks_17) {
    vector<int> expected = {39, 42, 53, 35, 10, 48, 21, 58, 15, 42};
    vector<int> maxSum = {21, 25, 31, 40, 5, 25, 39, 26, 8, 13};
    vector<vector<int>> a{{0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1},
                          {0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1},
                          {0, 1, 1},
                          {1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1},
                          {1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0},
                          {1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0},
                          {0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1},
                          {1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1},
                          {1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0},
                          {1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1}};
    vector<vector<int>> b{{1, 0, 0, 1},
                          {0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1},
                          {0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1},
                          {1, 1},
                          {1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0},
                          {1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1},
                          {1, 0, 1},
                          {1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1},
                          {1, 0, 0, 1, 0, 1, 0, 1, 1, 1},
                          {0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0}};
    for (auto index = 0; index < (int)expected.size(); index++) {
        auto result = GameOfTwoStacks::twoStacks(maxSum.at(index), a.at(index), b.at(index));
        EXPECT_EQ(expected.at(index), result);
    }
}

TEST(GameOfTwoStacksTest, twoStacks_1x) {
    vector<int> expected = {0};
    vector<int> maxSum = {62};
    vector<vector<int>> a{{},
                          {},
                          {},
                          {},
                          {},
                          {},
                          {},
                          {},
                          {},
                          {}};
    vector<vector<int>> b{{},
                          {},
                          {},
                          {},
                          {},
                          {},
                          {},
                          {},
                          {},
                          {}};
    for (auto index = 0; index < (int)expected.size(); index++) {
        auto result = GameOfTwoStacks::twoStacks(maxSum.at(index), a.at(index), b.at(index));
        EXPECT_EQ(expected.at(index), result);
    }
}
#endif